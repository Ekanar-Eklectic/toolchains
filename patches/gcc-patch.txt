diff -durN gcc-7.3.0/gcc/config/arm/t-arm-elf gcc-7.3.0.patched/gcc/config/arm/t-arm-elf
--- gcc-7.3.0/gcc/config/arm/t-arm-elf	2017-01-01 04:07:43.905435000 -0800
+++ gcc-7.3.0.patched/gcc/config/arm/t-arm-elf	2019-10-04 01:04:26.889175708 -0700
@@ -25,22 +25,36 @@
 #MULTILIB_DIRNAMES    += fa526 fa626 fa606te fa626te fmp626 fa726te
 #MULTILIB_EXCEPTIONS  += *mthumb*/*mcpu=fa526 *mthumb*/*mcpu=fa626
 
-#MULTILIB_OPTIONS      += march=armv7
-#MULTILIB_DIRNAMES     += thumb2
-#MULTILIB_EXCEPTIONS   += march=armv7* marm/*march=armv7*
-#MULTILIB_MATCHES      += march?armv7=march?armv7-a
-#MULTILIB_MATCHES      += march?armv7=march?armv7-r
-#MULTILIB_MATCHES      += march?armv7=march?armv7-m
-#MULTILIB_MATCHES      += march?armv7=mcpu?cortex-a8
-#MULTILIB_MATCHES      += march?armv7=mcpu?cortex-r4
-#MULTILIB_MATCHES      += march?armv7=mcpu?cortex-m3
+# build a bunch of specialized versions of libcc for particular cores
+#MULTILIB_OPTIONS    += mcpu=arm7tdmi/mcpu=arm9tdmi/mcpu=arm920t/mcpu=arm926ej-s/mcpu=arm1136j-s/mcpu=arm1136jf-s/mcpu=arm1176jz-s/mcpu=arm1176jzf-s/mcpu=xscale/mcpu=mpcore/mcpu=cortex-a8/cortex-a9/march=armv4t/march=armv5t/march=armv5te/march=armv6/march=armv6j/march=armv6k/march=armv6z/march=armv6zk/march=armv7-a/march=armv7-r
+#MULTILIB_DIRNAMES   += arm7tdmi arm9tdmi arm920t arm926ej-s arm1136j-s arm1136jf-s arm1176jz-s arm1176jzf-s xscale mpcore cortex-a8 cortex-a9 cortex-m3 armv4t armv5t armv5te armv6 armv6j armv6k armv6z armv6zk armv7-a armv7-r
+#MULTILIB_OPTIONS    += mcpu=arm7tdmi/mcpu=arm9tdmi/mcpu=arm920t/mcpu=arm926ej-s/mcpu=arm1136j-s/mcpu=arm1136jf-s/mcpu=arm1176jz-s/mcpu=arm1176jzf-s/mcpu=xscale/mcpu=mpcore/mcpu=cortex-a8/mcpu=cortex-a9
+#MULTILIB_DIRNAMES   += arm7tdmi arm9tdmi arm920t arm926ej-s arm1136j-s arm1136jf-s arm1176jz-s arm1176jzf-s xscale mpcore cortex-a8 cortex-a9
+
+MULTILIB_OPTIONS      += march=armv7
+MULTILIB_DIRNAMES     += thumb2
+MULTILIB_EXCEPTIONS   += march=armv7* marm/*march=armv7*
+MULTILIB_MATCHES      += march?armv7=march?armv7-a
+MULTILIB_MATCHES      += march?armv7=march?armv7-r
+MULTILIB_MATCHES      += march?armv7=march?armv7-m
+MULTILIB_MATCHES      += march?armv7=mcpu?cortex-a15
+MULTILIB_MATCHES      += march?armv7=mcpu?cortex-a9
+MULTILIB_MATCHES      += march?armv7=mcpu?cortex-a8
+MULTILIB_MATCHES      += march?armv7=mcpu?cortex-r4
+MULTILIB_MATCHES      += march?armv7=mcpu?cortex-m4
+MULTILIB_MATCHES      += march?armv7=mcpu?cortex-m3
+
+#MULTILIB_OPTIONS      += mfpu=vfp
+#MULTILIB_DIRNAMES     += vfp
+#MULTILIB_MATCHES      += mfpu?vfp=mcpu?arm1136jf-s
+#MULTILIB_MATCHES      += mfpu?vfp=mcpu?arm1136jzf-s
 
 # Not quite true.  We can support hard-vfp calling in Thumb2, but how do we
 # express that here?  Also, we really need architecture v5e or later
 # (mcrr etc).
-MULTILIB_OPTIONS       += mfloat-abi=hard
-MULTILIB_DIRNAMES      += fpu
-MULTILIB_EXCEPTIONS    += *mthumb/*mfloat-abi=hard*
+#MULTILIB_OPTIONS       += mfloat-abi=hard
+#MULTILIB_DIRNAMES      += fpu
+#MULTILIB_EXCEPTIONS    += *mthumb/*mfloat-abi=hard*
 #MULTILIB_EXCEPTIONS    += *mcpu=fa526/*mfloat-abi=hard*
 #MULTILIB_EXCEPTIONS    += *mcpu=fa626/*mfloat-abi=hard*
 
@@ -56,8 +70,8 @@
 # MULTILIB_DIRNAMES   += fpu soft
 # MULTILIB_EXCEPTIONS += *mthumb/*mfloat-abi=hard*
 # 
-# MULTILIB_OPTIONS    += mno-thumb-interwork/mthumb-interwork
-# MULTILIB_DIRNAMES   += normal interwork
+MULTILIB_OPTIONS    += mno-thumb-interwork/mthumb-interwork
+MULTILIB_DIRNAMES   += normal interwork
 # 
 # MULTILIB_OPTIONS    += fno-leading-underscore/fleading-underscore
 # MULTILIB_DIRNAMES   += elf under
diff -durN gcc-7.3.0/gcc/config/i386/t-x86_64-elf gcc-7.3.0.patched/gcc/config/i386/t-x86_64-elf
--- gcc-7.3.0/gcc/config/i386/t-x86_64-elf	1969-12-31 16:00:00.000000000 -0800
+++ gcc-7.3.0.patched/gcc/config/i386/t-x86_64-elf	2019-10-04 01:04:26.889175708 -0700
@@ -0,0 +1,7 @@
+# Add redzoneless libgcc
+MULTILIB_OPTIONS  += mno-red-zone
+MULTILIB_DIRNAMES += no-red-zone
+
+# Build a 32bit libgcc as well
+MULTILIB_OPTIONS  += m32
+MULTILIB_DIRNAMES  += 32
diff -durN gcc-7.3.0/gcc/config.gcc gcc-7.3.0.patched/gcc/config.gcc
--- gcc-7.3.0/gcc/config.gcc	2018-01-08 05:39:11.754860000 -0800
+++ gcc-7.3.0.patched/gcc/config.gcc	2019-10-04 01:04:26.889175708 -0700
@@ -1458,6 +1458,7 @@
 	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h"
 	;;
 x86_64-*-elf*)
+	tmake_file="${tmake_file} i386/t-x86_64-elf"
 	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h"
 	;;
 x86_64-*-rtems*)
diff -durN gcc-7.3.0/libgcc/config.host gcc-7.3.0.patched/libgcc/config.host
--- gcc-7.3.0/libgcc/config.host	2018-01-08 05:39:11.754860000 -0800
+++ gcc-7.3.0.patched/libgcc/config.host	2019-10-06 17:52:59.460336942 -0700
@@ -232,7 +232,7 @@
   esac
   ;;
 *-*-linux* | frv-*-*linux* | *-*-kfreebsd*-gnu | *-*-gnu* | *-*-kopensolaris*-gnu)
-  tmake_file="$tmake_file t-crtstuff-pic t-libgcc-pic t-eh-dw2-dip t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver t-linux"
+  tmake_file="$tmake_file t-crtstuff-pic t-libgcc-pic t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver t-linux"
   extra_parts="crtbegin.o crtbeginS.o crtbeginT.o crtend.o crtendS.o"
   if test x$enable_vtable_verify = xyes; then
     extra_parts="$extra_parts vtv_start.o vtv_end.o vtv_start_preinit.o vtv_end_preinit.o"
diff -durN gcc-7.3.0/libgcc/Makefile.in gcc-7.3.0.patched/libgcc/Makefile.in
--- gcc-7.3.0/libgcc/Makefile.in	2017-04-19 01:08:44.446150000 -0700
+++ gcc-7.3.0.patched/libgcc/Makefile.in	2019-10-06 17:54:29.611962245 -0700
@@ -335,11 +335,13 @@
     _tf_to_df _tf_to_sf _thenan_tf _tf_to_usi _usi_to_tf
 
 # Additional sources to handle exceptions; overridden by targets as needed.
-LIB2ADDEH = $(srcdir)/unwind-dw2.c $(srcdir)/unwind-dw2-fde.c \
+LIB2ADDEH = #$(srcdir)/unwind-dw2.c $(srcdir)/unwind-dw2-fde.c \
   $(srcdir)/unwind-sjlj.c $(srcdir)/unwind-c.c
 LIB2ADDEHSTATIC = $(LIB2ADDEH)
 LIB2ADDEHSHARED = $(LIB2ADDEH)
 
+$(warning LIB2ADDEH = $(LIB2ADDEH))
+
 # nm flags to list global symbols in libgcc object files.
 SHLIB_NM_FLAGS = -pg
 
@@ -365,6 +367,7 @@
 	-$(LN_S) $< $@
 
 tmake_file = @tmake_file@
+$(warning including tmake file $(tmake_file))
 include $(srcdir)/empty.mk $(tmake_file)
 
 # Collect target defines and headers from config.host.
@@ -425,9 +428,12 @@
 # While emutls.c has nothing to do with EH, it is in LIB2ADDEH*
 # instead of LIB2ADD because that's the way to be sure on some targets
 # (e.g. *-*-darwin*) only one copy of it is linked.
-LIB2ADDEH += $(srcdir)/emutls.c
-LIB2ADDEHSTATIC += $(srcdir)/emutls.c
-LIB2ADDEHSHARED += $(srcdir)/emutls.c
+LIB2ADDEH += #$(srcdir)/emutls.c
+LIB2ADDEHSTATIC += #$(srcdir)/emutls.c
+LIB2ADDEHSHARED += #$(srcdir)/emutls.c
+
+$(warning LIB2ADDEH = $(LIB2ADDEH))
+
 
 # Library members defined in libgcc2.c.
 lib2funcs = _muldi3 _negdi2 _lshrdi3 _ashldi3 _ashrdi3 _cmpdi2 _ucmpdi2	   \
@@ -857,8 +863,14 @@
 else
 # Not shared.  LIB2ADDEH are added to libgcc.a.
 
+$(warning LIB2ADDEH = $(LIB2ADDEH))
+
+$(warning libgcc-objects = $(libgcc-objects))
+
 libgcc-objects += $(addsuffix $(objext),$(basename $(notdir $(LIB2ADDEH))))
 
+$(warning libgcc-objects = $(libgcc-objects))
+
 iter-items := $(LIB2ADDEH)
 include $(iterator)
 
@@ -938,11 +950,11 @@
 
 	$(RANLIB) $@
 
-all: libgcc.a libgcov.a
+all: libgcc.a #libgcov.a
 
-ifneq ($(LIBUNWIND),)
-all: libunwind.a
-endif
+#ifneq ($(LIBUNWIND),)
+#all: libunwind.a
+#endif
 
 ifeq ($(enable_shared),yes)
 all: libgcc_eh.a libgcc_s$(SHLIB_EXT)
@@ -1161,9 +1173,9 @@
 	$(INSTALL_DATA) libgcc.a $(DESTDIR)$(inst_libdir)/
 	chmod 644 $(DESTDIR)$(inst_libdir)/libgcc.a
 	$(RANLIB) $(DESTDIR)$(inst_libdir)/libgcc.a
-	$(INSTALL_DATA) libgcov.a $(DESTDIR)$(inst_libdir)/
-	chmod 644 $(DESTDIR)$(inst_libdir)/libgcov.a
-	$(RANLIB) $(DESTDIR)$(inst_libdir)/libgcov.a
+	#$(INSTALL_DATA) libgcov.a $(DESTDIR)$(inst_libdir)/
+	#chmod 644 $(DESTDIR)$(inst_libdir)/libgcov.a
+	#$(RANLIB) $(DESTDIR)$(inst_libdir)/libgcov.a
 
 	parts="$(INSTALL_PARTS)";				\
 	for file in $$parts; do					\
